// automatically generated by the FlatBuffers compiler, do not modify

/**
 * @const
 * @namespace
 */
var executionGraph = executionGraph || {};

/**
 * @const
 * @namespace
 */
executionGraph.serialization = executionGraph.serialization || {};

/**
 * @const
 * @namespace
 */
var executionGraphGui = executionGraphGui || {};

/**
 * @const
 * @namespace
 */
executionGraphGui.serialization = executionGraphGui.serialization || {};

/**
 * @constructor
 */
executionGraphGui.serialization.CycleDescription = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {executionGraphGui.serialization.CycleDescription}
 */
executionGraphGui.serialization.CycleDescription.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {executionGraphGui.serialization.CycleDescription=} obj
 * @returns {executionGraphGui.serialization.CycleDescription}
 */
executionGraphGui.serialization.CycleDescription.getRootAsCycleDescription = function(bb, obj) {
  return (obj || new executionGraphGui.serialization.CycleDescription).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {number} index
 * @param {executionGraph.serialization.SocketLinkDescription=} obj
 * @returns {executionGraph.serialization.SocketLinkDescription}
 */
executionGraphGui.serialization.CycleDescription.prototype.cyclePath = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? (obj || new executionGraph.serialization.SocketLinkDescription).__init(this.bb.__vector(this.bb_pos + offset) + index * 40, this.bb) : null;
};

/**
 * @returns {number}
 */
executionGraphGui.serialization.CycleDescription.prototype.cyclePathLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
executionGraphGui.serialization.CycleDescription.start = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} cyclePathOffset
 */
executionGraphGui.serialization.CycleDescription.addCyclePath = function(builder, cyclePathOffset) {
  builder.addFieldOffset(0, cyclePathOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
executionGraphGui.serialization.CycleDescription.startCyclePathVector = function(builder, numElems) {
  builder.startVector(40, numElems, 8);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
executionGraphGui.serialization.CycleDescription.end = function(builder) {
  var offset = builder.endObject();
  builder.requiredField(offset, 4); // cyclePath
  return offset;
};

// Exports for Node.js and RequireJS
this.executionGraph = executionGraph;
this.executionGraphGui = executionGraphGui;
