// automatically generated by the FlatBuffers compiler, do not modify

/**
 * @enum
 */
export namespace executionGraphGui.serialization{
export enum ConstructorValue{
  NONE= 0,
  Bool= 1
}};

/**
 * @constructor
 */
export namespace executionGraphGui.serialization{
export class Bool {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns Bool
 */
__init(i:number, bb:flatbuffers.ByteBuffer):Bool {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @returns boolean
 */
value():boolean {
  return !!this.bb!.readInt8(this.bb_pos);
};

/**
 * @param flatbuffers.Builder builder
 * @param boolean value
 * @returns flatbuffers.Offset
 */
static createBool(builder:flatbuffers.Builder, value: boolean):flatbuffers.Offset {
  builder.prep(1, 1);
  builder.writeInt8(+value);
  return builder.offset();
};

}
}
/**
 * @constructor
 */
export namespace executionGraphGui.serialization{
export class ConstructorKV {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns ConstructorKV
 */
__init(i:number, bb:flatbuffers.ByteBuffer):ConstructorKV {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param ConstructorKV= obj
 * @returns ConstructorKV
 */
static getRootAsConstructorKV(bb:flatbuffers.ByteBuffer, obj?:ConstructorKV):ConstructorKV {
  return (obj || new ConstructorKV).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param flatbuffers.Encoding= optionalEncoding
 * @returns string|Uint8Array|null
 */
key():string|null
key(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
key(optionalEncoding?:any):string|Uint8Array|null {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param number index
 * @returns executionGraphGui.serialization.ConstructorValue
 */
valueType(index: number):executionGraphGui.serialization.ConstructorValue|null {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? /**  */ (this.bb!.readUint8(this.bb!.__vector(this.bb_pos + offset) + index)) : /**  */ (0);
};

/**
 * @returns number
 */
valueTypeLength():number {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @returns Uint8Array
 */
valueTypeArray():Uint8Array|null {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? new Uint8Array(this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset), this.bb!.__vector_len(this.bb_pos + offset)) : null;
};

/**
 * @param number index
 * @param flatbuffers.Table= obj
 * @returns ?flatbuffers.Table
 */
value<T extends flatbuffers.Table>(index: number, obj:T):T|null {
  var offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__union(obj, this.bb!.__vector(this.bb_pos + offset) + index * 4) : null;
};

/**
 * @returns number
 */
valueLength():number {
  var offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param flatbuffers.Builder builder
 */
static startConstructorKV(builder:flatbuffers.Builder) {
  builder.startObject(3);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset keyOffset
 */
static addKey(builder:flatbuffers.Builder, keyOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, keyOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset valueTypeOffset
 */
static addValueType(builder:flatbuffers.Builder, valueTypeOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, valueTypeOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param Array.<executionGraphGui.serialization.ConstructorValue> data
 * @returns flatbuffers.Offset
 */
static createValueTypeVector(builder:flatbuffers.Builder, data:executionGraphGui.serialization.ConstructorValue[]):flatbuffers.Offset {
  builder.startVector(1, data.length, 1);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addInt8(data[i]);
  }
  return builder.endVector();
};

/**
 * @param flatbuffers.Builder builder
 * @param number numElems
 */
static startValueTypeVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(1, numElems, 1);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset valueOffset
 */
static addValue(builder:flatbuffers.Builder, valueOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, valueOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param Array.<flatbuffers.Offset> data
 * @returns flatbuffers.Offset
 */
static createValueVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param flatbuffers.Builder builder
 * @param number numElems
 */
static startValueVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static endConstructorKV(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  builder.requiredField(offset, 4); // key
  builder.requiredField(offset, 6); // value_type
  builder.requiredField(offset, 8); // value
  return offset;
};

}
}
