// automatically generated by the FlatBuffers compiler, do not modify

/**
 * @constructor
 */
export class Vector2f {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns Vector2f
 */
__init(i:number, bb:flatbuffers.ByteBuffer):Vector2f {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @returns number
 */
x():number {
  return this.bb!.readFloat32(this.bb_pos);
};

/**
 * @returns number
 */
y():number {
  return this.bb!.readFloat32(this.bb_pos + 4);
};

/**
 * @param flatbuffers.Builder builder
 * @param number x
 * @param number y
 * @returns flatbuffers.Offset
 */
static createVector2f(builder:flatbuffers.Builder, x: number, y: number):flatbuffers.Offset {
  builder.prep(4, 8);
  builder.writeFloat32(y);
  builder.writeFloat32(x);
  return builder.offset();
};

}
/**
 * @constructor
 */
export class Vector2d {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns Vector2d
 */
__init(i:number, bb:flatbuffers.ByteBuffer):Vector2d {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @returns number
 */
x():number {
  return this.bb!.readFloat64(this.bb_pos);
};

/**
 * @returns number
 */
y():number {
  return this.bb!.readFloat64(this.bb_pos + 8);
};

/**
 * @param flatbuffers.Builder builder
 * @param number x
 * @param number y
 * @returns flatbuffers.Offset
 */
static createVector2d(builder:flatbuffers.Builder, x: number, y: number):flatbuffers.Offset {
  builder.prep(8, 16);
  builder.writeFloat64(y);
  builder.writeFloat64(x);
  return builder.offset();
};

}
/**
 * @constructor
 */
export class Vector3d {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns Vector3d
 */
__init(i:number, bb:flatbuffers.ByteBuffer):Vector3d {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @returns number
 */
x():number {
  return this.bb!.readFloat64(this.bb_pos);
};

/**
 * @returns number
 */
y():number {
  return this.bb!.readFloat64(this.bb_pos + 8);
};

/**
 * @returns number
 */
z():number {
  return this.bb!.readFloat64(this.bb_pos + 16);
};

/**
 * @param flatbuffers.Builder builder
 * @param number x
 * @param number y
 * @param number z
 * @returns flatbuffers.Offset
 */
static createVector3d(builder:flatbuffers.Builder, x: number, y: number, z: number):flatbuffers.Offset {
  builder.prep(8, 24);
  builder.writeFloat64(z);
  builder.writeFloat64(y);
  builder.writeFloat64(x);
  return builder.offset();
};

}
/**
 * @constructor
 */
export class Box2f {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns Box2f
 */
__init(i:number, bb:flatbuffers.ByteBuffer):Box2f {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param Vector2f= obj
 * @returns Vector2f|null
 */
positionMin(obj?:Vector2f):Vector2f|null {
  return (obj || new Vector2f).__init(this.bb_pos, this.bb!);
};

/**
 * @param Vector2f= obj
 * @returns Vector2f|null
 */
positionMax(obj?:Vector2f):Vector2f|null {
  return (obj || new Vector2f).__init(this.bb_pos + 8, this.bb!);
};

/**
 * @param flatbuffers.Builder builder
 * @param number positionMin_x
 * @param number positionMin_y
 * @param number positionMax_x
 * @param number positionMax_y
 * @returns flatbuffers.Offset
 */
static createBox2f(builder:flatbuffers.Builder, positionMin_x: number, positionMin_y: number, positionMax_x: number, positionMax_y: number):flatbuffers.Offset {
  builder.prep(4, 16);
  builder.prep(4, 8);
  builder.writeFloat32(positionMax_y);
  builder.writeFloat32(positionMax_x);
  builder.prep(4, 8);
  builder.writeFloat32(positionMin_y);
  builder.writeFloat32(positionMin_x);
  return builder.offset();
};

}
