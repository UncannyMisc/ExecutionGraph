// automatically generated by the FlatBuffers compiler, do not modify

/**
 * @const
 * @namespace
 */
var executionGraph = executionGraph || {};

/**
 * @const
 * @namespace
 */
executionGraph.serialization = executionGraph.serialization || {};

/**
 * @constructor
 */
executionGraph.serialization.WorkspaceVisualization = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {executionGraph.serialization.WorkspaceVisualization}
 */
executionGraph.serialization.WorkspaceVisualization.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {executionGraph.serialization.WorkspaceVisualization=} obj
 * @returns {executionGraph.serialization.WorkspaceVisualization}
 */
executionGraph.serialization.WorkspaceVisualization.getRootAsWorkspaceVisualization = function(bb, obj) {
  return (obj || new executionGraph.serialization.WorkspaceVisualization).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {flatbuffers.Long}
 */
executionGraph.serialization.WorkspaceVisualization.prototype.workspaceId = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readUint64(this.bb_pos + offset) : this.bb.createLong(0, 0);
};

/**
 * @param {Box2f=} obj
 * @returns {Box2f|null}
 */
executionGraph.serialization.WorkspaceVisualization.prototype.box = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? (obj || new Box2f).__init(this.bb_pos + offset, this.bb) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
executionGraph.serialization.WorkspaceVisualization.start = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Long} workspaceId
 */
executionGraph.serialization.WorkspaceVisualization.addWorkspaceId = function(builder, workspaceId) {
  builder.addFieldInt64(0, workspaceId, builder.createLong(0, 0));
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} boxOffset
 */
executionGraph.serialization.WorkspaceVisualization.addBox = function(builder, boxOffset) {
  builder.addFieldStruct(1, boxOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
executionGraph.serialization.WorkspaceVisualization.end = function(builder) {
  var offset = builder.endObject();
  builder.requiredField(offset, 6); // box
  return offset;
};

/**
 * @constructor
 */
executionGraph.serialization.NodeVisualization = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {executionGraph.serialization.NodeVisualization}
 */
executionGraph.serialization.NodeVisualization.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {executionGraph.serialization.NodeVisualization=} obj
 * @returns {executionGraph.serialization.NodeVisualization}
 */
executionGraph.serialization.NodeVisualization.getRootAsNodeVisualization = function(bb, obj) {
  return (obj || new executionGraph.serialization.NodeVisualization).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns {flatbuffers.Long}
 */
executionGraph.serialization.NodeVisualization.prototype.id = function() {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.readUint64(this.bb_pos + offset) : this.bb.createLong(0, 0);
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
executionGraph.serialization.NodeVisualization.prototype.name = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {Vector2d=} obj
 * @returns {Vector2d|null}
 */
executionGraph.serialization.NodeVisualization.prototype.position = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? (obj || new Vector2d).__init(this.bb_pos + offset, this.bb) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
executionGraph.serialization.NodeVisualization.start = function(builder) {
  builder.startObject(3);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Long} id
 */
executionGraph.serialization.NodeVisualization.addId = function(builder, id) {
  builder.addFieldInt64(0, id, builder.createLong(0, 0));
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} nameOffset
 */
executionGraph.serialization.NodeVisualization.addName = function(builder, nameOffset) {
  builder.addFieldOffset(1, nameOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} positionOffset
 */
executionGraph.serialization.NodeVisualization.addPosition = function(builder, positionOffset) {
  builder.addFieldStruct(2, positionOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
executionGraph.serialization.NodeVisualization.end = function(builder) {
  var offset = builder.endObject();
  builder.requiredField(offset, 6); // name
  return offset;
};

/**
 * @constructor
 */
executionGraph.serialization.LinkVisualization = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {executionGraph.serialization.LinkVisualization}
 */
executionGraph.serialization.LinkVisualization.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {executionGraph.serialization.LinkVisualization=} obj
 * @returns {executionGraph.serialization.LinkVisualization}
 */
executionGraph.serialization.LinkVisualization.getRootAsLinkVisualization = function(bb, obj) {
  return (obj || new executionGraph.serialization.LinkVisualization).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
executionGraph.serialization.LinkVisualization.prototype.name = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {executionGraph.serialization.SocketLinkDescription=} obj
 * @returns {executionGraph.serialization.SocketLinkDescription|null}
 */
executionGraph.serialization.LinkVisualization.prototype.socket = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? (obj || new executionGraph.serialization.SocketLinkDescription).__init(this.bb_pos + offset, this.bb) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
executionGraph.serialization.LinkVisualization.start = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} nameOffset
 */
executionGraph.serialization.LinkVisualization.addName = function(builder, nameOffset) {
  builder.addFieldOffset(0, nameOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} socketOffset
 */
executionGraph.serialization.LinkVisualization.addSocket = function(builder, socketOffset) {
  builder.addFieldStruct(1, socketOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
executionGraph.serialization.LinkVisualization.end = function(builder) {
  var offset = builder.endObject();
  builder.requiredField(offset, 6); // socket
  return offset;
};

/**
 * @constructor
 */
executionGraph.serialization.GraphVisualization = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {executionGraph.serialization.GraphVisualization}
 */
executionGraph.serialization.GraphVisualization.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {executionGraph.serialization.GraphVisualization=} obj
 * @returns {executionGraph.serialization.GraphVisualization}
 */
executionGraph.serialization.GraphVisualization.getRootAsGraphVisualization = function(bb, obj) {
  return (obj || new executionGraph.serialization.GraphVisualization).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
executionGraph.serialization.GraphVisualization.prototype.name = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {executionGraph.serialization.WorkspaceVisualization=} obj
 * @returns {executionGraph.serialization.WorkspaceVisualization|null}
 */
executionGraph.serialization.GraphVisualization.prototype.workspaceVisualization = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? (obj || new executionGraph.serialization.WorkspaceVisualization).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @param {number} index
 * @param {executionGraph.serialization.NodeVisualization=} obj
 * @returns {executionGraph.serialization.NodeVisualization}
 */
executionGraph.serialization.GraphVisualization.prototype.nodeVisualization = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? (obj || new executionGraph.serialization.NodeVisualization).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
executionGraph.serialization.GraphVisualization.prototype.nodeVisualizationLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {number} index
 * @param {executionGraph.serialization.LinkVisualization=} obj
 * @returns {executionGraph.serialization.LinkVisualization}
 */
executionGraph.serialization.GraphVisualization.prototype.linkVisualization = function(index, obj) {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? (obj || new executionGraph.serialization.LinkVisualization).__init(this.bb.__indirect(this.bb.__vector(this.bb_pos + offset) + index * 4), this.bb) : null;
};

/**
 * @returns {number}
 */
executionGraph.serialization.GraphVisualization.prototype.linkVisualizationLength = function() {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param {flatbuffers.Builder} builder
 */
executionGraph.serialization.GraphVisualization.start = function(builder) {
  builder.startObject(4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} nameOffset
 */
executionGraph.serialization.GraphVisualization.addName = function(builder, nameOffset) {
  builder.addFieldOffset(0, nameOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} workspaceVisualizationOffset
 */
executionGraph.serialization.GraphVisualization.addWorkspaceVisualization = function(builder, workspaceVisualizationOffset) {
  builder.addFieldOffset(1, workspaceVisualizationOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} nodeVisualizationOffset
 */
executionGraph.serialization.GraphVisualization.addNodeVisualization = function(builder, nodeVisualizationOffset) {
  builder.addFieldOffset(2, nodeVisualizationOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
executionGraph.serialization.GraphVisualization.createNodeVisualizationVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
executionGraph.serialization.GraphVisualization.startNodeVisualizationVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} linkVisualizationOffset
 */
executionGraph.serialization.GraphVisualization.addLinkVisualization = function(builder, linkVisualizationOffset) {
  builder.addFieldOffset(3, linkVisualizationOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {Array.<flatbuffers.Offset>} data
 * @returns {flatbuffers.Offset}
 */
executionGraph.serialization.GraphVisualization.createLinkVisualizationVector = function(builder, data) {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} numElems
 */
executionGraph.serialization.GraphVisualization.startLinkVisualizationVector = function(builder, numElems) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
executionGraph.serialization.GraphVisualization.end = function(builder) {
  var offset = builder.endObject();
  builder.requiredField(offset, 4); // name
  return offset;
};

// Exports for Node.js and RequireJS
this.executionGraph = executionGraph;
