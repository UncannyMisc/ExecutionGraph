// automatically generated by the FlatBuffers compiler, do not modify

/**
 * @const
 * @namespace
 */
var executionGraphGui = executionGraphGui || {};

/**
 * @const
 * @namespace
 */
executionGraphGui.serialization = executionGraphGui.serialization || {};

/**
 * @constructor
 */
executionGraphGui.serialization.BrowseRequest = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {executionGraphGui.serialization.BrowseRequest}
 */
executionGraphGui.serialization.BrowseRequest.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {executionGraphGui.serialization.BrowseRequest=} obj
 * @returns {executionGraphGui.serialization.BrowseRequest}
 */
executionGraphGui.serialization.BrowseRequest.getRootAsBrowseRequest = function(bb, obj) {
  return (obj || new executionGraphGui.serialization.BrowseRequest).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
executionGraphGui.serialization.BrowseRequest.prototype.path = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @returns {flatbuffers.Long}
 */
executionGraphGui.serialization.BrowseRequest.prototype.recursive = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.readUint64(this.bb_pos + offset) : this.bb.createLong(0, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 */
executionGraphGui.serialization.BrowseRequest.start = function(builder) {
  builder.startObject(2);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} pathOffset
 */
executionGraphGui.serialization.BrowseRequest.addPath = function(builder, pathOffset) {
  builder.addFieldOffset(0, pathOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Long} recursive
 */
executionGraphGui.serialization.BrowseRequest.addRecursive = function(builder, recursive) {
  builder.addFieldInt64(1, recursive, builder.createLong(0, 0));
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
executionGraphGui.serialization.BrowseRequest.end = function(builder) {
  var offset = builder.endObject();
  builder.requiredField(offset, 4); // path
  return offset;
};

/**
 * @constructor
 */
executionGraphGui.serialization.BrowseResponse = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {executionGraphGui.serialization.BrowseResponse}
 */
executionGraphGui.serialization.BrowseResponse.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {executionGraphGui.serialization.BrowseResponse=} obj
 * @returns {executionGraphGui.serialization.BrowseResponse}
 */
executionGraphGui.serialization.BrowseResponse.getRootAsBrowseResponse = function(bb, obj) {
  return (obj || new executionGraphGui.serialization.BrowseResponse).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {executionGraphGui.serialization.PathInfo=} obj
 * @returns {executionGraphGui.serialization.PathInfo|null}
 */
executionGraphGui.serialization.BrowseResponse.prototype.info = function(obj) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? (obj || new executionGraphGui.serialization.PathInfo).__init(this.bb.__indirect(this.bb_pos + offset), this.bb) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
executionGraphGui.serialization.BrowseResponse.start = function(builder) {
  builder.startObject(1);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} infoOffset
 */
executionGraphGui.serialization.BrowseResponse.addInfo = function(builder, infoOffset) {
  builder.addFieldOffset(0, infoOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
executionGraphGui.serialization.BrowseResponse.end = function(builder) {
  var offset = builder.endObject();
  builder.requiredField(offset, 4); // info
  return offset;
};

// Exports for Node.js and RequireJS
this.executionGraphGui = executionGraphGui;
