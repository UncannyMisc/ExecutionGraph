// automatically generated by the FlatBuffers compiler, do not modify

/**
 * @constructor
 */
export namespace executionGraphGui.serialization{
export class AddGraphRequest {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns AddGraphRequest
 */
__init(i:number, bb:flatbuffers.ByteBuffer):AddGraphRequest {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param AddGraphRequest= obj
 * @returns AddGraphRequest
 */
static getRootAsAddGraphRequest(bb:flatbuffers.ByteBuffer, obj?:AddGraphRequest):AddGraphRequest {
  return (obj || new AddGraphRequest).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param flatbuffers.Encoding= optionalEncoding
 * @returns string|Uint8Array|null
 */
graphTypeId():string|null
graphTypeId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
graphTypeId(optionalEncoding?:any):string|Uint8Array|null {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param flatbuffers.Builder builder
 */
static startAddGraphRequest(builder:flatbuffers.Builder) {
  builder.startObject(1);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset graphTypeIdOffset
 */
static addGraphTypeId(builder:flatbuffers.Builder, graphTypeIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, graphTypeIdOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static endAddGraphRequest(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  builder.requiredField(offset, 4); // graphTypeId
  return offset;
};

}
}
/**
 * @constructor
 */
export namespace executionGraphGui.serialization{
export class AddGraphResponse {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns AddGraphResponse
 */
__init(i:number, bb:flatbuffers.ByteBuffer):AddGraphResponse {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param AddGraphResponse= obj
 * @returns AddGraphResponse
 */
static getRootAsAddGraphResponse(bb:flatbuffers.ByteBuffer, obj?:AddGraphResponse):AddGraphResponse {
  return (obj || new AddGraphResponse).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param flatbuffers.Encoding= optionalEncoding
 * @returns string|Uint8Array|null
 */
graphId():string|null
graphId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
graphId(optionalEncoding?:any):string|Uint8Array|null {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param flatbuffers.Builder builder
 */
static startAddGraphResponse(builder:flatbuffers.Builder) {
  builder.startObject(1);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset graphIdOffset
 */
static addGraphId(builder:flatbuffers.Builder, graphIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, graphIdOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static endAddGraphResponse(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  builder.requiredField(offset, 4); // graphId
  return offset;
};

}
}
/**
 * @constructor
 */
export namespace executionGraphGui.serialization{
export class RemoveGraphRequest {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns RemoveGraphRequest
 */
__init(i:number, bb:flatbuffers.ByteBuffer):RemoveGraphRequest {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param RemoveGraphRequest= obj
 * @returns RemoveGraphRequest
 */
static getRootAsRemoveGraphRequest(bb:flatbuffers.ByteBuffer, obj?:RemoveGraphRequest):RemoveGraphRequest {
  return (obj || new RemoveGraphRequest).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param flatbuffers.Encoding= optionalEncoding
 * @returns string|Uint8Array|null
 */
graphId():string|null
graphId(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
graphId(optionalEncoding?:any):string|Uint8Array|null {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param flatbuffers.Builder builder
 */
static startRemoveGraphRequest(builder:flatbuffers.Builder) {
  builder.startObject(1);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset graphIdOffset
 */
static addGraphId(builder:flatbuffers.Builder, graphIdOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, graphIdOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static endRemoveGraphRequest(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  builder.requiredField(offset, 4); // graphId
  return offset;
};

}
}
