// automatically generated by the FlatBuffers compiler, do not modify


#ifndef FLATBUFFERS_GENERATED_FILEBROWSERMESSAGES_EXECUTIONGRAPHGUI_SERIALIZATION_H_
#define FLATBUFFERS_GENERATED_FILEBROWSERMESSAGES_EXECUTIONGRAPHGUI_SERIALIZATION_H_

#include "flatbuffers/flatbuffers.h"

#include "executionGraphGui/messages/schemas/cpp/FileSystemInfo_generated.h"

namespace executionGraphGui {
namespace serialization {

struct BrowseRequest;

struct BrowseResponse;

struct BrowseRequest FLATBUFFERS_FINAL_CLASS : private flatbuffers::Table {
  enum FlatBuffersVTableOffset FLATBUFFERS_VTABLE_UNDERLYING_TYPE {
    VT_PATH = 4,
    VT_RECURSIVE = 6
  };
  const flatbuffers::String *path() const {
    return GetPointer<const flatbuffers::String *>(VT_PATH);
  }
  uint64_t recursive() const {
    return GetField<uint64_t>(VT_RECURSIVE, 0);
  }
  bool Verify(flatbuffers::Verifier &verifier) const {
    return VerifyTableStart(verifier) &&
           VerifyOffsetRequired(verifier, VT_PATH) &&
           verifier.VerifyString(path()) &&
           VerifyField<uint64_t>(verifier, VT_RECURSIVE) &&
           verifier.EndTable();
  }
};

struct BrowseRequestBuilder {
  flatbuffers::FlatBufferBuilder &fbb_;
  flatbuffers::uoffset_t start_;
  void add_path(flatbuffers::Offset<flatbuffers::String> path) {
    fbb_.AddOffset(BrowseRequest::VT_PATH, path);
  }
  void add_recursive(uint64_t recursive) {
    fbb_.AddElement<uint64_t>(BrowseRequest::VT_RECURSIVE, recursive, 0);
  }
  explicit BrowseRequestBuilder(flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  BrowseRequestBuilder &operator=(const BrowseRequestBuilder &);
  flatbuffers::Offset<BrowseRequest> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = flatbuffers::Offset<BrowseRequest>(end);
    fbb_.Required(o, BrowseRequest::VT_PATH);
    return o;
  }
};

inline flatbuffers::Offset<BrowseRequest> CreateBrowseRequest(
    flatbuffers::FlatBufferBuilder &_fbb,
    flatbuffers::Offset<flatbuffers::String> path = 0,
    uint64_t recursive = 0) {
  BrowseRequestBuilder builder_(_fbb);
  builder_.add_recursive(recursive);
  builder_.add_path(path);
  return builder_.Finish();
}

inline flatbuffers::Offset<BrowseRequest> CreateBrowseRequestDirect(
    flatbuffers::FlatBufferBuilder &_fbb,
    const char *path = nullptr,
    uint64_t recursive = 0) {
  auto path__ = path ? _fbb.CreateString(path) : 0;
  return executionGraphGui::serialization::CreateBrowseRequest(
      _fbb,
      path__,
      recursive);
}

struct BrowseResponse FLATBUFFERS_FINAL_CLASS : private flatbuffers::Table {
  enum FlatBuffersVTableOffset FLATBUFFERS_VTABLE_UNDERLYING_TYPE {
    VT_INFO = 4
  };
  const PathInfo *info() const {
    return GetPointer<const PathInfo *>(VT_INFO);
  }
  bool Verify(flatbuffers::Verifier &verifier) const {
    return VerifyTableStart(verifier) &&
           VerifyOffsetRequired(verifier, VT_INFO) &&
           verifier.VerifyTable(info()) &&
           verifier.EndTable();
  }
};

struct BrowseResponseBuilder {
  flatbuffers::FlatBufferBuilder &fbb_;
  flatbuffers::uoffset_t start_;
  void add_info(flatbuffers::Offset<PathInfo> info) {
    fbb_.AddOffset(BrowseResponse::VT_INFO, info);
  }
  explicit BrowseResponseBuilder(flatbuffers::FlatBufferBuilder &_fbb)
        : fbb_(_fbb) {
    start_ = fbb_.StartTable();
  }
  BrowseResponseBuilder &operator=(const BrowseResponseBuilder &);
  flatbuffers::Offset<BrowseResponse> Finish() {
    const auto end = fbb_.EndTable(start_);
    auto o = flatbuffers::Offset<BrowseResponse>(end);
    fbb_.Required(o, BrowseResponse::VT_INFO);
    return o;
  }
};

inline flatbuffers::Offset<BrowseResponse> CreateBrowseResponse(
    flatbuffers::FlatBufferBuilder &_fbb,
    flatbuffers::Offset<PathInfo> info = 0) {
  BrowseResponseBuilder builder_(_fbb);
  builder_.add_info(info);
  return builder_.Finish();
}

}  // namespace serialization
}  // namespace executionGraphGui

#endif  // FLATBUFFERS_GENERATED_FILEBROWSERMESSAGES_EXECUTIONGRAPHGUI_SERIALIZATION_H_
