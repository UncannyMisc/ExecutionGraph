// automatically generated by the FlatBuffers compiler, do not modify

import * as NS6430394118259426465 from "./SocketLinkDescription_generated";
import * as NS265933416849523758 from "./GraphVisualization_generated";
import * as NS8768211991854589814 from "./LogicNode_generated";
import * as NS14255453238270099840 from "./GraphTypeDescription_generated";
/**
 * @enum
 */
export namespace executionGraph.serialization{
export enum NodeClassification{
  NormalNode= 0,
  InputNode= 1,
  OutputNode= 2,
  ConstantNode= 3
}};

/**
 * @constructor
 */
export namespace executionGraph.serialization{
export class ExecutionGraphNodeProperties {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns ExecutionGraphNodeProperties
 */
__init(i:number, bb:flatbuffers.ByteBuffer):ExecutionGraphNodeProperties {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param ExecutionGraphNodeProperties= obj
 * @returns ExecutionGraphNodeProperties
 */
static getRootAsExecutionGraphNodeProperties(bb:flatbuffers.ByteBuffer, obj?:ExecutionGraphNodeProperties):ExecutionGraphNodeProperties {
  return (obj || new ExecutionGraphNodeProperties).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @returns flatbuffers.Long
 */
nodeId():flatbuffers.Long {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readUint64(this.bb_pos + offset) : this.bb!.createLong(0, 0);
};

/**
 * @returns executionGraph.serialization.NodeClassification
 */
classification():executionGraph.serialization.NodeClassification {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? /**  */ (this.bb!.readInt8(this.bb_pos + offset)) : executionGraph.serialization.NodeClassification.NormalNode;
};

/**
 * @param number index
 * @returns flatbuffers.Long
 */
groups(index: number):flatbuffers.Long|null {
  var offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readUint64(this.bb!.__vector(this.bb_pos + offset) + index * 8) : this.bb!.createLong(0, 0);
};

/**
 * @returns number
 */
groupsLength():number {
  var offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param flatbuffers.Builder builder
 */
static startExecutionGraphNodeProperties(builder:flatbuffers.Builder) {
  builder.startObject(3);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Long nodeId
 */
static addNodeId(builder:flatbuffers.Builder, nodeId:flatbuffers.Long) {
  builder.addFieldInt64(0, nodeId, builder.createLong(0, 0));
};

/**
 * @param flatbuffers.Builder builder
 * @param executionGraph.serialization.NodeClassification classification
 */
static addClassification(builder:flatbuffers.Builder, classification:executionGraph.serialization.NodeClassification) {
  builder.addFieldInt8(1, classification, executionGraph.serialization.NodeClassification.NormalNode);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset groupsOffset
 */
static addGroups(builder:flatbuffers.Builder, groupsOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, groupsOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param Array.<flatbuffers.Long> data
 * @returns flatbuffers.Offset
 */
static createGroupsVector(builder:flatbuffers.Builder, data:flatbuffers.Long[]):flatbuffers.Offset {
  builder.startVector(8, data.length, 8);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addInt64(data[i]);
  }
  return builder.endVector();
};

/**
 * @param flatbuffers.Builder builder
 * @param number numElems
 */
static startGroupsVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(8, numElems, 8);
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static endExecutionGraphNodeProperties(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  return offset;
};

}
}
/**
 * @constructor
 */
export namespace executionGraph.serialization{
export class ExecutionGraph {
  bb: flatbuffers.ByteBuffer|null = null;

  bb_pos:number = 0;
/**
 * @param number i
 * @param flatbuffers.ByteBuffer bb
 * @returns ExecutionGraph
 */
__init(i:number, bb:flatbuffers.ByteBuffer):ExecutionGraph {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @param ExecutionGraph= obj
 * @returns ExecutionGraph
 */
static getRootAsExecutionGraph(bb:flatbuffers.ByteBuffer, obj?:ExecutionGraph):ExecutionGraph {
  return (obj || new ExecutionGraph).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param flatbuffers.ByteBuffer bb
 * @returns boolean
 */
static bufferHasIdentifier(bb:flatbuffers.ByteBuffer):boolean {
  return bb.__has_identifier('EXGR');
};

/**
 * @param executionGraph.serialization.GraphTypeDescription= obj
 * @returns executionGraph.serialization.GraphTypeDescription|null
 */
graphDescription(obj?:NS14255453238270099840.executionGraph.serialization.GraphTypeDescription):NS14255453238270099840.executionGraph.serialization.GraphTypeDescription|null {
  var offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new NS14255453238270099840.executionGraph.serialization.GraphTypeDescription).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
};

/**
 * @param number index
 * @param executionGraph.serialization.LogicNode= obj
 * @returns executionGraph.serialization.LogicNode
 */
nodes(index: number, obj?:NS8768211991854589814.executionGraph.serialization.LogicNode):NS8768211991854589814.executionGraph.serialization.LogicNode|null {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new NS8768211991854589814.executionGraph.serialization.LogicNode).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
};

/**
 * @returns number
 */
nodesLength():number {
  var offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param number index
 * @param executionGraph.serialization.SocketLinkDescription= obj
 * @returns executionGraph.serialization.SocketLinkDescription
 */
links(index: number, obj?:NS6430394118259426465.executionGraph.serialization.SocketLinkDescription):NS6430394118259426465.executionGraph.serialization.SocketLinkDescription|null {
  var offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? (obj || new NS6430394118259426465.executionGraph.serialization.SocketLinkDescription).__init(this.bb!.__vector(this.bb_pos + offset) + index * 40, this.bb!) : null;
};

/**
 * @returns number
 */
linksLength():number {
  var offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param number index
 * @param executionGraph.serialization.ExecutionGraphNodeProperties= obj
 * @returns executionGraph.serialization.ExecutionGraphNodeProperties
 */
nodeProperties(index: number, obj?:executionGraph.serialization.ExecutionGraphNodeProperties):executionGraph.serialization.ExecutionGraphNodeProperties|null {
  var offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? (obj || new executionGraph.serialization.ExecutionGraphNodeProperties).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;
};

/**
 * @returns number
 */
nodePropertiesLength():number {
  var offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;
};

/**
 * @param executionGraph.serialization.GraphVisualization= obj
 * @returns executionGraph.serialization.GraphVisualization|null
 */
visualization(obj?:NS265933416849523758.executionGraph.serialization.GraphVisualization):NS265933416849523758.executionGraph.serialization.GraphVisualization|null {
  var offset = this.bb!.__offset(this.bb_pos, 12);
  return offset ? (obj || new NS265933416849523758.executionGraph.serialization.GraphVisualization).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
};

/**
 * @param flatbuffers.Builder builder
 */
static startExecutionGraph(builder:flatbuffers.Builder) {
  builder.startObject(5);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset graphDescriptionOffset
 */
static addGraphDescription(builder:flatbuffers.Builder, graphDescriptionOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, graphDescriptionOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset nodesOffset
 */
static addNodes(builder:flatbuffers.Builder, nodesOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, nodesOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param Array.<flatbuffers.Offset> data
 * @returns flatbuffers.Offset
 */
static createNodesVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param flatbuffers.Builder builder
 * @param number numElems
 */
static startNodesVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset linksOffset
 */
static addLinks(builder:flatbuffers.Builder, linksOffset:flatbuffers.Offset) {
  builder.addFieldOffset(2, linksOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param number numElems
 */
static startLinksVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(40, numElems, 8);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset nodePropertiesOffset
 */
static addNodeProperties(builder:flatbuffers.Builder, nodePropertiesOffset:flatbuffers.Offset) {
  builder.addFieldOffset(3, nodePropertiesOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @param Array.<flatbuffers.Offset> data
 * @returns flatbuffers.Offset
 */
static createNodePropertiesVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {
  builder.startVector(4, data.length, 4);
  for (var i = data.length - 1; i >= 0; i--) {
    builder.addOffset(data[i]);
  }
  return builder.endVector();
};

/**
 * @param flatbuffers.Builder builder
 * @param number numElems
 */
static startNodePropertiesVector(builder:flatbuffers.Builder, numElems:number) {
  builder.startVector(4, numElems, 4);
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset visualizationOffset
 */
static addVisualization(builder:flatbuffers.Builder, visualizationOffset:flatbuffers.Offset) {
  builder.addFieldOffset(4, visualizationOffset, 0);
};

/**
 * @param flatbuffers.Builder builder
 * @returns flatbuffers.Offset
 */
static endExecutionGraph(builder:flatbuffers.Builder):flatbuffers.Offset {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param flatbuffers.Builder builder
 * @param flatbuffers.Offset offset
 */
static finishExecutionGraphBuffer(builder:flatbuffers.Builder, offset:flatbuffers.Offset) {
  builder.finish(offset, 'EXGR');
};

}
}
